#!/usr/bin/env lua

package.cpath = package.cpath .. ";/Users/" .. os.getenv("USER") .. "/.local/share/sketchybar_lua/?.so"

local sbar = require("sketchybar")
local style = require("style")
local icons = require("icons")
local system = require("utils.system")

-- bootstrap system variables
local hostname = system.getHostname()

-- work hostname is not stable so test for personal hostname
local isPersonal = hostname == "Olivers-MaxBook.local"
local isWork = not isPersonal

-- bundle configuration into single message
sbar.begin_config()
sbar.hotload(true)

sbar.bar(style.bar)

sbar.default({
  background = style.background,
  icon = style.icon,
  label = style.label,
})

local focus = require("utils.focus").new()
local sessionizer = require("utils.sessionizer").new()
local aerospace = require("utils.aerospace").new()

require("items.workspace").new(icons.workspaces, aerospace).add("left")
require("items.sessions").new(icons.sessions, style.sessions).add("left")
require("items.windows").new(icons.windows, style.windows).add("left")
require("items.mission").new(icons.mission, focus).add("left")
require("items.project").new(icons.project, sessionizer).add("left")

require("items.clock").new(icons.clock).add("right")
require("items.weather").new(icons.weather).add("right")
require("items.battery").new(icons.battery).add("right")
require("items.calendar").new(icons.calendar, focus).add("right")

if isWork then
  local tunnelblick = require("utils.tunnelblick").new()
  require("items.tunnelblick").new(icons.tunnelblick, tunnelblick).add("right")
end

sbar.end_config()

sbar.event_loop()
