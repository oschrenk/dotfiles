# Start AeroSpace at login
start-at-login = true

# Run commands after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command'
# See: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# Add commands that run after AeroSpace startup.
# runs after 'after-login-command'
# See: https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Normalizations. 
# See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: 
#   - wide monitor gets horizontal orientation,
#   - tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Notify Sketchybar about workspace change
# See https://nikitabobko.github.io/AeroSpace/guide#exec-on-workspace-change-callback
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_changed FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical = 0
outer.top = [{ monitor."Built-in Retina Display" = 3 }, 33]

[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
M = 'secondary' # Media on secondary screen

#######################################
# BINDINGS
#######################################

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift
# See: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

#++++++++++++++++++++++++++++++++++++++
# MAIN.bindings
#++++++++++++++++++++++++++++++++++++++

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# Switch to workspace
# Workspace can also be char eg `alt-b = 'workspace b'`
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-m = 'workspace M'

# Move to workspace
# Workspace can also be char eg `alt-shift-b = 'move-node-to-workspace b'`
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-m = 'move-node-to-workspace M'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

#++++++++++++++++++++++++++++++++++++++
# SERVICE.bindings
#++++++++++++++++++++++++++++++++++++++

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
# reload config
esc = ['reload-config', 'mode main']
# reset layout
r = [' flatten-workspace-tree', 'mode main']
# Toggle between floating and tiling layout
f = ['layout floating tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# Popular bundle ids
# https://nikitabobko.github.io/AeroSpace/goodness#popular-apps-ids
# 
# Find bundle id
# $ osascript -e 'id of app "Arc"'

#######################################
# WORKSPACES
#######################################

#++++++++++++++++++++++++++++++++++++++
# workspace.AFFINITY
#++++++++++++++++++++++++++++++++++++++

# workspace.1 (=Main)
#--------------------------------------

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.neovide.neovide'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'org.alacritty'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.neovide.neovide'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij.ce'
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'org.jkiss.dbeaver.core.product'
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['move-node-to-workspace 1']

# workspace.2 (=secondary)
#--------------------------------------

[[on-window-detected]]
if.app-id = 'com.docker.docker'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.utmapp.UTM'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.msteedman.mochi'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.valvesoftware.steam'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinitydesigner2'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinitypublisher2'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinityphoto2'
run = 'move-node-to-workspace 2'

# workspace.M (=Media and Messenger)
#--------------------------------------

[[on-window-detected]]
if.app-id = 'com.tdesktop.Telegram'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = 'move-node-to-workspace M'


#++++++++++++++++++++++++++++++++++++++
# WINDOWS.floating
#++++++++++++++++++++++++++++++++++++++

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'cx.c3.theunarchiver'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Dictionary'
run = 'layout floating'
