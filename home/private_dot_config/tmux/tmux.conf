###################
# Look and feel
###################

# Enable 24bit colors
set -g default-terminal "screen-256color"

set-option -gas terminal-overrides "*:Tc"           # true color support
set-option -gas terminal-overrides "*:RGB"          # true color support
# setup red undercurls
# https://ryantravitz.com/blog/2023-02-18-pull-of-the-undercurl/
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


set-option -g default-shell /opt/homebrew/bin/fish

###󰺦################
# Statusline
###################
set -g status on

# match black menu bar of macos
set-option -g status-position top
set-option -g status-style fg=colour15,bold,bg=colour16

# left
set-window-option -g status-left " #S "

# right
set -g status-right " #(~/.config/tmux/github_prs.sh) #{pomodoro_status}"

# hide middle section
set -g window-status-current-format ''
set -g window-status-format ''


###################
# Configuration
###################

set -g clipboard on

# Enable mouse support
set -g mouse on

# Start numbering at 1, 0 is too far from `
set -g base-index 1
set-window-option -g pane-base-index 1

# Ensure window index numbers get reordered on delete.
# set-option -g renumber-windows on

# Allows for faster key repetition
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# New windows in same path
bind c new-window -c "#{pane_current_path}"

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# More scrollback-size, more history
set-option -g history-limit 30000
#
# allow to pass on focus events to vim inside of tmux
# needed as on tmux 1.9 and up (defaults to off)
# added in tmux commit c7a121cfc0137c907b7bfb
set -g focus-events on

###################
# Key bindings
###################

# Horizontal split
unbind %
bind | split-window -h -c "#{pane_current_path}"

# Vertical split
unbind '"'
bind - split-window -v -c "#{pane_current_path}"

# Use Alt-arrow keys without prefix key to resize panes
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
bind -n M-Up resize-pane -U 1
bind -n M-Down resize-pane -D 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Rerrange windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1


# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# TPM
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'laktak/extrakto'
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Configure extrakto
set -g @extrakto_grab_area "window full"
set -g @extrakto_split_direction "v"
set -g @extrakto_split_size "10"
set -g @extrakto_grab_area "window 500"
set -g @extrakto_copy_key "tab"
set -g @extrakto_insert_key "enter"

# Configure pomodoro
set -g @pomodoro_mins 25             # The duration of the pomodoro
set -g @pomodoro_break_mins 5        # The duration of the break after the pomodoro
set -g @pomodoro_on " 󱫐 "            # The formatted output when the pomodoro is running
set -g @pomodoro_complete "  "      # The formatted output when the break is running
set -g @pomodoro_notifications 'on'  # Enable desktop notifications from your terminal


###################
# Automatic Installation
###################

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.config/tmux/plugins/tpm/tpm'

# Reload configuration with `prefix, r`
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "~/.tmux.conf reloaded"
