# Enable Powerline
source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
set-option -g default-terminal "screen-256color"

# Enable mouse support
set -g mode-mouse on
set -g mouse-select-pane on

# Start numbering at 1, 0 is too far from `
set -g base-index 1
set-window-option -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Highlight active window
set-window-option -g window-status-current-bg red

# New windows in same path
bind c new-window -c "#{pane_current_path}"

# Horizontal split
unbind %
bind | split-window -h -c "#{pane_current_path}"

# Vertical split
unbind '"'
bind - split-window -v -c "#{pane_current_path}"

# Use Alt-arrow keys without prefix key to resize panes
bind -n M-Left resize-pane -L 1
bind -n M-Right resize-pane -R 1
bind -n M-Up resize-pane -U 1
bind -n M-Down resize-pane -D 1

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Rerrange windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# More scrollback-size, more history
set-option -g history-limit 5000

# Reload configuration with `prefix, r`
bind-key r source-file ~/.tmux.conf

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

